package resolute_property_evaluation

public
	
with resoluteps;

thread t
properties
	resoluteps::foobar => 10;
end t;

thread implementation t.i
end t.i;

	
process p
end p;

process implementation p.i
subcomponents
--	t1 : thread t.i {resoluteps::foobar => 20;};
	t1 : thread t.i;
	t2 : thread t.i {resoluteps::foobar => 20;};
end p.i;
	
system integration
end integration;

system implementation integration.i
subcomponents
	p : process p.i;
annex resolute {**
	prove have_non_null_period(this.p)
**};
end integration.i;


annex resolute {**
	
	have_non_null_period(p : component) <=
  		** " All threads has a foobar bigger than 15" **
		forall(t : thread). contained(t, p) => check_thread (t)

	check_thread(t : thread) <=
  	** "The thread " t " as a foobar bigger than 15"  **
  		(has_property (t, resoluteps::foobar)) and 
  		(property (t, resoluteps::foobar) > 15)
**}; 
 
end resolute_property_evaluation;
