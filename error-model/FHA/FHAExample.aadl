package FHAExample
public
with SEI, MILSTD882, EMV2;
with ErrorLibrary, ErrorModelLibrary;
-- use of Hazard property both in generic form (EMV2) and in one of the standard forms (MILSTD882).
-- Generic form uses enumeration A-E for severity levels, and integer 1-5 for likelihood
-- Standard specific variants (MILSTD882 and ARP4761) use enumerations for severity and likelihood.
-- illustrates use of symbolic constants in generic hazard form to map standard specific labels into base type.
-- it also illustrates to use of the hazard property applied to the state as error source, a type as error source, or the error propagation as error source.
-- finally, it illustrates associating the hazard property in the context of a component classifier and in the context of a subcomponent.
  device PositionSensor
    features
      PositionReading: out data port ;
    flows
      f1: flow source PositionReading {
        Latency => 2 ms .. 3 ms;
        };
    annex EMV2 {**
        use types ErrorLibrary;
    	use behavior ErrorModelLibrary::Simple; 
    	error propagations 
    		PositionReading: out propagation  {ServiceOmission,ValueError,ItemOmission};
    	flows
    	
		 ef1:error source PositionReading {ServiceOmission} when Failed;
		 ef2:error source PositionReading {ValueError} when Failed;
		 ef3:error source PositionReading {ItemOmission} when Failed;
	end propagations;
	properties
	-- property is associated with the error behavior state as the source of an error source.
	-- it uses the generic version of the Hazard property
		EMV2::severity => 1 applies to ef1.Failed;
		EMV2::likelihood => C applies to ef1.Failed;
	EMV2::hazard => 
	[	crossreference => "1.1.1";
		failure => "Loss of sensor readings";
		phase => "all";
		description => "No position readings due to sensor failure";
		comment => "Becomes major hazard, if no rdeundant sensor";
			]
			applies to ef1.Failed;
    **};
  end PositionSensor;

  
  
  device Actuator
    features
      ActCmd: in data port ;
    flows
      fs: flow sink ActCmd {
        Latency => 2 ms .. 3 ms;
        };
    annex EMV2 {**
        use types ErrorLibrary;
    	use behavior ErrorModelLibrary::Simple;
    	error propagations 
    	    operation: out propagation {ServiceOmission} ;
    		ActCmd: in propagation  {ServiceOmission,ValueError,ItemOmission};
    	flows
		 ef1:error sink ActCmd{ValueError};
		 ef2:error source operation {ServiceOmission} ;
	
 		end propagations;
	  	propagation paths
 			operation: propagation point;
 		end paths;
	properties
	-- the property is associated with an a specific error type of an outgoing observable propagation point
	-- it uses the MILSTD882 specific variant of the hazard property, the severity and likelihood values are enumeration literals.
		MILSTD882::severity => Catastrophic applies to operation.ServiceOmission;
		MILSTD882::likelihood => Remote applies to operation.ServiceOmission;
	EMV2::hazard => 
	[	crossreference => "1.1.2";
		failure => "Loss of actuator functionality";
		phase => "all";
		description => "Failure to move actuator into desired position";
		comment => "Is a major hazard. Pilot cannot control actuator due to sensor failure";
			]
			applies to operation.ServiceOmission;
    **};
  end Actuator;
  
  
  
  processor PowerPC
    properties
      SEI::MIPSCapacity => 5.0 MIPS;
  end PowerPC;
  

  system AircraftFMS
  end AircraftFMS;
  
  system implementation AircraftFMS.i
    subcomponents
      PositionSensor: device PositionSensor;
      Actuator1: device Actuator ;
      Actuator2: device Actuator ;
      FMSProcessor: processor PowerPC;
    connections
      sensedPosition: port PositionSensor.PositionReading  -> Actuator1.ActCmd;
      Actuator2Cmd: port PositionSensor.PositionReading -> Actuator2.ActCmd;
annex EMV2 {** 
	properties 
	-- here the hazard property is associated with the error behavior state in an error source of a subcomponent.
	-- In this case the path starts out within the core model (subcomponent)
	-- It overrides the Hazard property assocaited in the component classifier of the subcomponent.
		MILSTD882::severity => Critical applies to Actuator2.ef2.Failed;
		MILSTD882::likelihood => Remote applies to Actuator2.ef2.Failed;
		EMV2::hazard => 
	[	crossreference => "1.1.3";
		failure => "Loss of actuator action";
		phase => "all";
		description => "No action due to sensor failure";
		comment => "Becomes major hazard, if no rdeundant sensor";
			]
			applies to Actuator2.ef2.Failed;
	
	**};
  end AircraftFMS.i;
end FHAExample;